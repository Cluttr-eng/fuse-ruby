=begin
#Fuse

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'date'
require 'time'

module FuseClient
  class FinancialConnectionsInvestmentTransactionSubtype
    ACCOUNT_FEE = "account_fee".freeze
    ADJUSTMENT = "adjustment".freeze
    ASSIGNMENT = "assignment".freeze
    BUY = "buy".freeze
    BUY_TO_COVER = "buy_to_cover".freeze
    CONTRIBUTION = "contribution".freeze
    DEPOSIT = "deposit".freeze
    DISTRIBUTION = "distribution".freeze
    DIVIDEND = "dividend".freeze
    DIVIDEND_REINVESTMENT = "dividend_reinvestment".freeze
    EXERCISE = "exercise".freeze
    EXPIRE = "expire".freeze
    FUND_FEE = "fund_fee".freeze
    INTEREST = "interest".freeze
    INTEREST_RECEIVABLE = "interest_receivable".freeze
    INTEREST_REINVESTMENT = "interest_reinvestment".freeze
    LEGAL_FEE = "legal_fee".freeze
    LOAN_PAYMENT = "loan_payment".freeze
    LONG_TERM_CAPITAL_GAIN = "long_term_capital_gain".freeze
    LONG_TERM_CAPITAL_GAIN_REINVESTMENT = "long_term_capital_gain_reinvestment".freeze
    MANAGEMENT_FEE = "management_fee".freeze
    MARGIN_EXPENSE = "margin_expense".freeze
    MERGER = "merger".freeze
    MISCELLANEOUS_FEE = "miscellaneous_fee".freeze
    NON_QUALIFIED_DIVIDEND = "non_qualified_dividend".freeze
    NON_RESIDENT_TAX = "non_resident_tax".freeze
    PENDING_CREDIT = "pending_credit".freeze
    PENDING_DEBIT = "pending_debit".freeze
    QUALIFIED_DIVIDEND = "qualified_dividend".freeze
    REBALANCE = "rebalance".freeze
    RETURN_OF_PRINCIPAL = "return_of_principal".freeze
    REQUEST = "request".freeze
    SELL = "sell".freeze
    SELL_SHORT = "sell_short".freeze
    SEND = "send".freeze
    SHORT_TERM_CAPITAL_GAIN = "short_term_capital_gain".freeze
    SHORT_TERM_CAPITAL_GAIN_REINVESTMENT = "short_term_capital_gain_reinvestment".freeze
    SPIN_OFF = "spin_off".freeze
    SPLIT = "split".freeze
    STOCK_DISTRIBUTION = "stock_distribution".freeze
    TAX = "tax".freeze
    TAX_WITHHELD = "tax_withheld".freeze
    TRADE = "trade".freeze
    TRANSFER = "transfer".freeze
    TRANSFER_FEE = "transfer_fee".freeze
    TRUST_FEE = "trust_fee".freeze
    UNQUALIFIED_GAIN = "unqualified_gain".freeze
    WITHDRAWAL = "withdrawal".freeze
    UNMAPPED = "-".freeze

    def self.all_vars
      @all_vars ||= [ACCOUNT_FEE, ADJUSTMENT, ASSIGNMENT, BUY, BUY_TO_COVER, CONTRIBUTION, DEPOSIT, DISTRIBUTION, DIVIDEND, DIVIDEND_REINVESTMENT, EXERCISE, EXPIRE, FUND_FEE, INTEREST, INTEREST_RECEIVABLE, INTEREST_REINVESTMENT, LEGAL_FEE, LOAN_PAYMENT, LONG_TERM_CAPITAL_GAIN, LONG_TERM_CAPITAL_GAIN_REINVESTMENT, MANAGEMENT_FEE, MARGIN_EXPENSE, MERGER, MISCELLANEOUS_FEE, NON_QUALIFIED_DIVIDEND, NON_RESIDENT_TAX, PENDING_CREDIT, PENDING_DEBIT, QUALIFIED_DIVIDEND, REBALANCE, RETURN_OF_PRINCIPAL, REQUEST, SELL, SELL_SHORT, SEND, SHORT_TERM_CAPITAL_GAIN, SHORT_TERM_CAPITAL_GAIN_REINVESTMENT, SPIN_OFF, SPLIT, STOCK_DISTRIBUTION, TAX, TAX_WITHHELD, TRADE, TRANSFER, TRANSFER_FEE, TRUST_FEE, UNQUALIFIED_GAIN, WITHDRAWAL, ].freeze
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      return value if FinancialConnectionsInvestmentTransactionSubtype.all_vars.include?(value)
      raise "Invalid ENUM value #{value} for class #FinancialConnectionsInvestmentTransactionSubtype"
    end
  end
end
